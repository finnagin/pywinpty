name: Windows tests

on:
    push:
        branches:
            - main
            - arm64-runner
    pull_request:
        branches:
            - main
jobs:
    windows:
        name: Windows Py${{ matrix.PYTHON_VERSION }} ${{ matrix.TARGET_ARCH }}
        runs-on: ${{ matrix.OS }}
        timeout-minutes: 10
        env:
            PYTHON_VERSION: ${{ matrix.PYTHON_VERSION }}
            RUNNER_OS: "windows"
            PYWINPTY_BLOCK: "1"
            CI_RUNNING: "1"
        strategy:
            fail-fast: false
            matrix:
                PYTHON_VERSION: ["3.9", "3.10", "3.11", "3.12", "3.13", "3.13t"]
                TARGET_ARCH: ["x86_64-pc-windows-msvc", "aarch64-pc-windows-msvc"]
                OS: [windows-latest, winodws-11-arm]
                exclude:
                  - PYTHON_VERSION: "3.9"
                    TARGET_ARCH: "aarch64-pc-windows-msvc"
                  - TARGET_ARCH: "aarch64-pc-windows-msvc"
                    OS: windows-latest
                  - TARGET_ARCH: "x86_64-pc-windows-msvc"
                    OS: windows-11-arm
        steps:
            - name: Checkout branch
              uses: actions/checkout@v4
            - if: ${{ matrix.OS == 'windows-11-arm' }}
              name: Setup rust
              id: setup-rust
              run: |
                  Invoke-WebRequest https://static.rust-lang.org/rustup/dist/aarch64-pc-windows-msvc/rustup-init.exe -OutFile .\rustup-init.exe
                  .\rustup-init.exe -y
                  Add-Content $env:GITHUB_PATH "$env:USERPROFILE\.cargo\bin"
            - name: Install latest Rust stable
              uses: actions-rs/toolchain@v1
              with:
                toolchain: stable
                target: ${{ matrix.TARGET_ARCH }}
                override: true
                components: rustfmt, clippy
            - name: Remove free-threaded suffix from version
              env:
                PYTHON_VERSION: ${{ matrix.PYTHON_VERSION }}
              shell: bash -l {0}
              run: |
                PYTHON_VERSION_NONSUFFIX=$PYTHON_VERSION
                if [[ $PYTHON_VERSION = *t ]]; then
                  PYTHON_VERSION_NONSUFFIX=${PYTHON_VERSION//t}
                  echo "PYTHON_VERSION_NONSUFFIX=$PYTHON_VERSION_NONSUFFIX" >> $GITHUB_ENV
                fi
                echo "PYTHON_VERSION_NONSUFFIX=$PYTHON_VERSION_NONSUFFIX" >> $GITHUB_ENV
            - name: Install miniconda
              uses: conda-incubator/setup-miniconda@v3
              with:
                auto-update-conda: true
                activate-environment: test
                channels: conda-forge,defaults
                python-version: ${{ env.PYTHON_VERSION_NONSUFFIX }}
            - name: Reinstall free-threaded Python
              if: ${{ endsWith(matrix.PYTHON_VERSION, 't') }}
              shell: bash -l {0}
              run: |
                conda install --override-channels -c conda-forge python-freethreading
            - name: Conda env info
              shell: bash -l {0}
              run: conda env list
            - name: Install winpty
              shell: bash -l {0}
              run: conda install -y winpty
            - name: Install build/test dependencies
              shell: bash -l {0}
              run: pip install maturin toml pytest flaky
            - name: Build pywinpty
              shell: bash -l {0}
              run: maturin develop
            - name: Run tests
              shell: pwsh
              run: python runtests.py
            # Enable this to get RDP access to the worker.
            # - name: Download
            #   # if: ${{ failure() }}
            #   run: Invoke-WebRequest https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
            # - name: Extract
            #   # if: ${{ failure() }}
            #   run: Expand-Archive ngrok.zip
            # - name: Auth
            #   # if: ${{ failure() }}
            #   run: .\ngrok\ngrok.exe authtoken 1raaG4z7gsaCRlLw8cRkUWW6ItF_2LWTUFxXwd6UeeJNAAAci
            # - name: Enable TS
            #   # if: ${{ failure() }}
            #   run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server'-name "fDenyTSConnections" -Value 0
            # - run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
            #   # if: ${{ failure() }}
            # - run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
            #   # if: ${{ failure() }}
            # - run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)
            #   # if: ${{ failure() }}
            # - name: Create Tunnel
            #   # if: ${{ failure() }}
            #   run: .\ngrok\ngrok.exe tcp 3389
